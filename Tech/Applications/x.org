* vue
  :PROPERTIES:
  :CUSTOM_ID: vue
  :END:
** 响应式原理
   :PROPERTIES:
   :CUSTOM_ID: 响应式原理
   :END:
*** 变化追踪
    :PROPERTIES:
    :CUSTOM_ID: 变化追踪
    :END:
Object.defineProperty把所有属性转为getter/setter

*** 流程图
    :PROPERTIES:
    :CUSTOM_ID: 流程图
    :END:
#+caption: Vue 实例生命周期
[[../.././.src/lifecycle.png]]

*** Object类型
    :PROPERTIES:
    :CUSTOM_ID: object类型
    :END:
通过特定方法设置 Vue.set/this.$set(object, key, value) 重新生成对象。
this.someObject = Object.assign({}, this.someObject)

*** array
    :PROPERTIES:
    :CUSTOM_ID: array
    :END:
Vue.set(array, index, newValue) array.splice(index, 1, newValue)
*支持的方法*: =push()=, =pop()=,=shift()=, =unshift()=, =splice()=,
=sort()=, =reverse()=

*** 声明响应式属性。
    :PROPERTIES:
    :CUSTOM_ID: 声明响应式属性
    :END:
Vue 不允许动态添加根属性，所以属性需要初始化时声明。

*** 异步更新队列
    :PROPERTIES:
    :CUSTOM_ID: 异步更新队列
    :END:
vm.$nextTick(callback)

** js
   :PROPERTIES:
   :CUSTOM_ID: js
   :END:
*** [[http://www.ruanyifeng.com/blog/2014/10/event-loop.html][EventLoop]]
    :PROPERTIES:
    :CUSTOM_ID: eventloop
    :END:

- setTimeout
- setInverval
- process.nextTick(Node.js)
- setImmediate(Node.js)

** re-render component
   :PROPERTIES:
   :CUSTOM_ID: re-render-component
   :END:
*** reload-page
    :PROPERTIES:
    :CUSTOM_ID: reload-page
    :END:
*** v-if
    :PROPERTIES:
    :CUSTOM_ID: v-if
    :END:
*** force-update
    :PROPERTIES:
    :CUSTOM_ID: force-update
    :END:
*** :key
    :PROPERTIES:
    :CUSTOM_ID: key
    :END:
